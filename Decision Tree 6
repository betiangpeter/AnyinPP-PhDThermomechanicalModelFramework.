def partition(rows, question):
    """Partition a dataset.

    For each row in the dataset, check if it matches the question. If
    so, add it to 'true rows', otherwise; add it to 'false rows'.
    """

    true_rows, false_rows = [], []
    for row in rows:
        if question.match(row):
            true_rows.append(row)
        else:
            false_rows.append(row)
    return true_rows, false_rows

true_rows, false_rows = partition(training_data, Question(2, 'Bitu_20/30'))
# This will contain all the 'Red' rows.
true_rows
ret1 = true_rows
P = np.array(ret1)[:,1]
statistics.median(P)
